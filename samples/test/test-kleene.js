// Generated by CoffeeScript 1.6.2
(function() {
  var andp, begin, bind, cons, dao, dightsSpaces, dummy, flatString, getvalue, is_, kleene, kleenePredicate, macro, orp, print_, settext, solve, special, toString, vari, xexports, _ref, _ref1, _ref2, _ref3;

  _ref = dao = require("../../lib/dao"), solve = _ref.solve, special = _ref.special, vari = _ref.vari, dummy = _ref.dummy, cons = _ref.cons, vari = _ref.vari, macro = _ref.macro;

  _ref1 = require("../../lib/builtins/general"), print_ = _ref1.print_, getvalue = _ref1.getvalue, toString = _ref1.toString;

  _ref2 = require("../../lib/builtins/logic"), andp = _ref2.andp, orp = _ref2.orp, bind = _ref2.bind, is_ = _ref2.is_;

  begin = require("../../lib/builtins/lisp").begin;

  settext = require("../../lib/builtins/parser").settext;

  _ref3 = require("../kleene"), kleene = _ref3.kleene, kleenePredicate = _ref3.kleenePredicate, dightsSpaces = _ref3.dightsSpaces, flatString = _ref3.flatString;

  xexports = {};

  exports.Test = {
    "test kleenePredicate": function(test) {
      var x;

      x = vari('x');
      console.log(solve(begin(settext('123 456'), kleenePredicate(dightsSpaces)(x), flatString(getvalue(x)))));
      return test.done();
    }
  };

  exports.Test = {
    "test kleenePredicate": function(test) {
      var x;

      x = vari('x');
      console.log(solve(begin(settext('ab'), kleene(x), flatString(getvalue(x)))));
      test.equal(dao.status, dao.SUCCESS);
      return test.done();
    }
  };

}).call(this);

/*
//@ sourceMappingURL=test-kleene.map
*/
