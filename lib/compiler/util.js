// Generated by CoffeeScript 1.6.2
(function() {
  var jsfun, vari, vop,
    __slice = [].slice;

  exports.vari = vari = function(name) {
    return ["var", name];
  };

  exports.vars = function(names) {
    var name, _i, _len, _ref, _results;

    _ref = split(names, reElements);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      _results.push(vari(name));
    }
    return _results;
  };

  exports.quote = function(exp) {
    return ["quote", exp];
  };

  exports.begin = function() {
    var exps;

    exps = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return ["begin"].concat(exps);
  };

  exports.assign = function(vari, exp) {
    return ["assign", vari, exp];
  };

  exports.if_ = function(test, then_, else_) {
    return ["if", test, then_, else_];
  };

  exports.funcall = function() {
    var args, caller;

    caller = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return ["funcall", caller].concat(args);
  };

  exports.jsobject = function(exp) {
    return ["jsobject", exp];
  };

  exports.jsfun = jsfun = function(exp) {
    return ["jsfun", exp];
  };

  exports.vop = vop = function() {
    var args, name;

    name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return ["vop_" + name].concat(args);
  };

  exports.add = function(x, y) {
    return vop('add', x, y);
  };

  exports.print_ = function() {
    var exps;

    exps = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return ['funcall', jsfun(vari('console.log'))].concat(exps);
  };

}).call(this);

/*
//@ sourceMappingURL=util.map
*/
