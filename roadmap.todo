just javascript:
  ☐ function without cont as parameter
  ✔ augment assign @done (13-06-17 15:32)
  ☐ while
  ☐ javascript's try/catch/throw
  ✔ javascript's new @done (13-06-22 21:27)
  ☐ remove unnecessary parenthesis by using precedence of operator

optimization:
  ☐ assign optimization
  ☐ loop optimization: assign, extract computation
  ☐ tail recursive
  ☐ il.let_, il.clamda, il.rclamda(can replace parmenter v directly)
  ✔ il.equalcont @done (13-06-23 21:03)

lisp features:
  ✔ catch/throw @done (13-06-18 08:53)
  ✔ unwind-protect @done (13-06-18 08:53)
  ✔ callcc @done (13-06-18 10:58)

logic features:
  ✔ logic var @done (13-06-19 17:56)
  ✔ unify @done (13-06-19 17:18)
  ✔ logic or @done (13-06-19 10:32)
  ✔ fail @done (13-06-19 10:32)
  ✔ logic negation, repeat @done (13-06-19 15:02)
  ✔ findall @done (13-06-20 14:04)
  ☐ call, once, etc.
  ☐ callfc
  ☐ Cons, UObject, UArray

parser features:
  ✔ parser state @done (13-06-21 21:32)
  ✔ test parsetext, settext @done (13-06-23 20:50)
  ✔ low level primitive @done (13-06-21 21:32)
    ✔ test @done (13-06-24 11:31)
  ✔ terminals @done (13-06-22 21:26)
    ✔ test char, number, literal @done (13-06-23 18:19)
  ✔ follow, notfollow, may, any @done (13-06-22 21:26)
    ☐ test
  ☐ some, times
  ☐ dummy var

