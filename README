daonode
============================

this is an porting and rewriting in javascript of the dao project (python). 

What would happen when lisp meets prolog in javascript?  

Dao is the new generation programming system implemented by a functional logic solver, 
unifying code with data, grammar with program, logic with functional, compiling with running.

------------------
How to use daonode?
------------------

See the tests, and you'll get some information about the interface and use cases.

---------------
Documentation
---------------

See <https://github.com/chaosim/daonode/wiki>

Some old or related informations can be reached from <http://code.google.com/p/daot> <http://packages.python.org/daot> <https://github.com/chaosim/dao>.

-------------
Web sites
-------------

the project's repository is on github <https://github.com/chaosim/daonode>. 

dao groups on google: Group name: daot, Group home page: http://groups.google.com/group/daot, Group email address: daot@googlegroups.com

pypi distribution and document: http://pypi.python.org/pypi/daot 

some old information and related stuff can be reached at <http://code.google.com/p/daot>.

google+ pages for news on dao: https://plus.google.com/112050694070234685790

Come to visit us!

---------
Testing
---------

daonode use the nodeunit test framework, the code in daonode is tested with many tests.

------------
Bug reports
------------

To report or search for bugs, please goto <https://github.com/chaosim/daonode>, or email to simeon.chaos@gmail.com

The source repository is on <https://github.com/chaosim/daonode>.

-----------------
Platform notes
-----------------

daonode is developed and tested on Windows 7, node.js 0.10.0, coffeescript 1.16.2.

--------------------
License information
---------------------

copyright (c) 2011-2013 曹星明 Caoxingming(Simeon Chaos, email: simeon.chaos@gmail.com)

see LICENCE

That's all, folks!

